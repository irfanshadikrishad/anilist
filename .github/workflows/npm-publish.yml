name: Node.js Package

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  bump-version:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full history to ensure proper tag handling

      - name: Ensure correct branch
        run: |
          BRANCH=$(git symbolic-ref --short HEAD || echo ${{ github.event.release.target_commitish }})
          git checkout "$BRANCH"
          echo "Checked out branch: $BRANCH"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Configure Git
        run: |
          git config --global user.name "Irfan Shadik Rishad"
          git config --global user.email "irfanshadikrishad@gmail.com"

      - name: Cleanup existing tag
        run: |
          VERSION="v$(node -p "require('./package.json').version")"
          if git rev-parse "$VERSION" >/dev/null 2>&1; then
            echo "Deleting existing tag $VERSION locally and remotely..."
            git tag -d "$VERSION" || true
            git push --delete origin "$VERSION" || true
          fi

      - name: Bump version
        run: npm version patch --force # Change 'patch' to 'minor' or 'major' as needed

      - name: Push updated version and tags
        run: |
          git push origin HEAD --follow-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    needs: bump-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: npm ci

      - name: Publish package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
